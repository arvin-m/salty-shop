{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstant.js","reducers/orderReducers.js","constants/orderConstants.js","actions/userActions.js","Components/SearchBox.js","Components/Header.js","Components/Footer.js","Components/Rating.js","Components/Product.js","actions/productActions.js","Components/Message.js","Components/Loader.js","Components/Paginate.js","Components/ProductCarousel.js","Screens/HomeScreen.js","Screens/ProductScreen.js","actions/cartActions.js","Screens/CartScreen.js","Components/FormContainer.js","Screens/LoginScreen.js","Screens/RegisterScreen.js","Screens/ProfileScreen.js","actions/orderActions.js","Components/CheckoutSteps.js","Screens/ShippingScreen.js","Screens/PaymentScreen.js","Screens/PlaceOrderScreen.js","Screens/OrderScreen.js","Screens/UserListScreen.js","Screens/UserEditScreen.js","Screens/ProductListScreen.js","Screens/ProductEditScreen.js","Screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","size","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","height","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","listProducts","pageNumber","listProductDetails","Message","children","Alert","Loader","Spinner","animation","role","width","margin","display","Paginate","Pagination","Array","keys","key","active","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","match","params","sm","md","lg","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","ListGroup","description","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","dispacth","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","postaalCode","index","createOrder","OrderScreen","orderId","sdkready","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","console","log","payOrder","isDeliverd","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f18102c4.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer\r\n} from './reducers/userReducers'\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer\r\n\r\n})\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\nconst middleware = [thunk]\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n  } from '../constants/productConstants'\r\n  \r\n  export const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_LIST_REQUEST:\r\n        return { loading: true, products: [] }\r\n      case PRODUCT_LIST_SUCCESS:\r\n        return {\r\n          loading: false,\r\n          products: action.payload.products,\r\n          pages: action.payload.pages,\r\n          page: action.payload.page,\r\n        }\r\n      case PRODUCT_LIST_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const productDetailsReducer = (\r\n    state = { product: { reviews: [] } },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case PRODUCT_DETAILS_REQUEST:\r\n        return { loading: true, ...state }\r\n      case PRODUCT_DETAILS_SUCCESS:\r\n        return { loading: false, product: action.payload }\r\n      case PRODUCT_DETAILS_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_DELETE_REQUEST:\r\n        return { loading: true }\r\n      case PRODUCT_DELETE_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case PRODUCT_DELETE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_CREATE_REQUEST:\r\n        return { loading: true }\r\n      case PRODUCT_CREATE_SUCCESS:\r\n        return { loading: false, success: true, product: action.payload }\r\n      case PRODUCT_CREATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case PRODUCT_CREATE_RESET:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_UPDATE_REQUEST:\r\n        return { loading: true }\r\n      case PRODUCT_UPDATE_SUCCESS:\r\n        return { loading: false, success: true, product: action.payload }\r\n      case PRODUCT_UPDATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case PRODUCT_UPDATE_RESET:\r\n        return { product: {} }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_CREATE_REVIEW_REQUEST:\r\n        return { loading: true }\r\n      case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case PRODUCT_CREATE_REVIEW_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case PRODUCT_CREATE_REVIEW_RESET:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_TOP_REQUEST:\r\n        return { loading: true, products: [] }\r\n      case PRODUCT_TOP_SUCCESS:\r\n        return { loading: false, products: action.payload }\r\n      case PRODUCT_TOP_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  ","export const PRODUCT_LIST_REQUEST='PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS='PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL='PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST='PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS='PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL='PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST='PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS='PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL='PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST='PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS='PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL='PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET='PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST='PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS='PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL='PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET='PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST='PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS='PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL='PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET='PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST='PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS='PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL='PRODUCT_TOP_FAIL'","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n  } from '../constants/cartConstants'\r\n  \r\n  export const cartReducer = (\r\n    state = { cartItems: [], shippingAddress: {} },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case CART_ADD_ITEM:\r\n        const item = action.payload\r\n  \r\n        const existItem = state.cartItems.find((x) => x.product === item.product)\r\n  \r\n        if (existItem) {\r\n          return {\r\n            ...state,\r\n            cartItems: state.cartItems.map((x) =>\r\n              x.product === existItem.product ? item : x\r\n            ),\r\n          }\r\n        } else {\r\n          return {\r\n            ...state,\r\n            cartItems: [...state.cartItems, item],\r\n          }\r\n        }\r\n      case CART_REMOVE_ITEM:\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n        }\r\n      case CART_SAVE_SHIPPING_ADDRESS:\r\n        return {\r\n          ...state,\r\n          shippingAddress: action.payload,\r\n        }\r\n      case CART_SAVE_PAYMENT_METHOD:\r\n        return {\r\n          ...state,\r\n          paymentMethod: action.payload,\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  ","export const CART_ADD_ITEM ='CART_ADD_ITEM '\r\nexport const CART_REMOVE_ITEM ='CART_REMOVE_ITEM '\r\nexport const CART_SAVE_SHIPPING_ADDRESS ='CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD ='CART_SAVE_PAYMENT_METHOD'\r\n","import {\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_DETAILS_RESET,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_RESET,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_REQUEST} from '../constants/userConstant'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n            case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n            \r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return { user : {}}\r\n            \r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return {loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false,success:true, userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n            \r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const userListReducer = (state = {users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return {loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LIST_RESET:\r\n            return { users:[] }\r\n            \r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const userDeleteReducer = (state = {users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return {loading: true }\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false,success:true }\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n       \r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n      case USER_UPDATE_REQUEST:\r\n        return { loading: true }\r\n      case USER_UPDATE_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case USER_UPDATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_UPDATE_RESET:\r\n        return {\r\n          user: {},\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }","export const USER_LOGIN_REQUEST='USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS='USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL='USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT='USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST='USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS='USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL='USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST='USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS='USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL='USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET='USER_DETAILS_RESET'\r\n\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST='USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS='USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL='USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET='USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST='USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS='USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL='USER_LIST_FAIL'\r\nexport const USER_LIST_RESET='USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST='USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS='USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL='USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST='USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS='USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL='USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET='USER_UPDATE_RESET'","import {\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state = {loading:true, orderItems:[], shippingAddress:{}}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n      case ORDER_LIST_MY_REQUEST:\r\n        return {\r\n          loading: true,\r\n        }\r\n      case ORDER_LIST_MY_SUCCESS:\r\n        return {\r\n          loading: false,\r\n          orders: action.payload,\r\n        }\r\n      case ORDER_LIST_MY_FAIL:\r\n        return {\r\n          loading: false,\r\n          error: action.payload,\r\n        }\r\n      case ORDER_LIST_MY_RESET:\r\n        return { orders: [] }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\nexport const orderListReducer = (state = {orders :[]}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n            \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","export const ORDER_CREATE_REQUEST='ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS='ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL='ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST='ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS='ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL='ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST='ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS='ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL='ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET='ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST='ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS='ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL='ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET='ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST='ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS='ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL='ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST='ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS='ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL='ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET='ORDER_DELIVER_RESET'\r\n\r\n","import {\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_DETAILS_RESET,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_FAIL\r\n} from \"../constants/userConstant\"\r\nimport {ORDER_LIST_MY_RESET} from '../constants/orderConstants'\r\nimport axios from 'axios'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.post('/api/users/login', { email, password }, config)\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n\r\n\r\n\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.post('/api/users', { name, email, password }, config)\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        //MAKE USER LOGIN RIGHT AFTER THEY REGISTER\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_LIST_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.get(`/api/users`, config)\r\n  \r\n      dispatch({\r\n        type: USER_LIST_SUCCESS,\r\n        payload: data\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n        const { userLogin: { userInfo },\r\n         } = getState()\r\n        const config = {\r\n            headers: {\r\n               \r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n         await axios.delete(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            \r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_UPDATE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n  \r\n      dispatch({ type: USER_UPDATE_SUCCESS })\r\n  \r\n      dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_UPDATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }","import React ,{useState} from 'react'\r\nimport {Form,Button} from 'react-bootstrap'\r\n\r\n\r\nconst SearchBox = ({history}) => {\r\n    const [keyword,setKeyword]= useState('')\r\n\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        if(keyword.trim()){\r\n            history.push(`/search/${keyword}`)\r\n        }else {\r\n            history.push('/')\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control type='text' name='q' onChange={(e)=> setKeyword(e.target.value)}\r\n             placeholder='Search Products...' className='mr-sm-2 ml-sm-5'></Form.Control>\r\n             <Button type='submit' variant='outline-secondary'size=\"sm\"  >Search</Button>\r\n            \r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport{LinkContainer} from 'react-router-bootstrap'\nimport { Container, Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport {useDispatch,useSelector} from 'react-redux'\nimport {logout} from '../actions/userActions'\nimport SearchBox from './SearchBox'\n\n\nconst Header = () => {\n\n    const userLogin=useSelector(state=>state.userLogin)\n    const {userInfo}=userLogin\n    const dispatch=useDispatch()\n\n    const logoutHandler=()=>{\n        dispatch(logout())\n    }\n\n\n    return (\n        <header>\n            <Navbar bg=\"primary\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>Salty Shop</Navbar.Brand>\n                    </LinkContainer>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    {/* We are not have access to the props.history directly so we use Route to have access to th ehistory and pass it to the SearchBox component  */}\n                    <Route render={ ({history}) => <SearchBox history={history}/> }/>\n                    <Nav className=\"ml-auto\">\n                    <LinkContainer to='/cart'>\n                        <Nav.Link><i className='fas fa-shopping-cart'></i> Cart</Nav.Link>\n                    </LinkContainer>\n                    {userInfo ? (\n                        <NavDropdown title={userInfo.name} id='username'>\n                            <LinkContainer to='/profile'>\n                                <NavDropdown.Item>Profile</NavDropdown.Item>\n                            </LinkContainer>\n                            <NavDropdown.Item onClick={logoutHandler}>LogOut</NavDropdown.Item>\n\n                        </NavDropdown>\n                    ):(\n                    <LinkContainer to='/login'>\n                        <Nav.Link><i className='fas fa-user'></i>Sign In</Nav.Link>\n                    </LinkContainer>\n                    )}\n                    {userInfo && userInfo.isAdmin && (\n                         <NavDropdown title='Admin' id='adminmenu'>\n                         <LinkContainer to='/admin/userlist'>\n                             <NavDropdown.Item>Users</NavDropdown.Item>\n                         </LinkContainer>\n                         <LinkContainer to='/admin/productlist'>\n                             <NavDropdown.Item>Products</NavDropdown.Item>\n                         </LinkContainer>\n                         <LinkContainer to='/admin/orderlist'>\n                             <NavDropdown.Item>Orders</NavDropdown.Item>\n                         </LinkContainer>\n                     </NavDropdown>\n\n                    )}\n                    </Nav>\n                </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react';\r\nimport {Container, Row ,Col} from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright &copy; Salty Shop\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { propTypes } from 'react';\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{color}} className={value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n                <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n// Set The default value for rating star color\r\nRating.defaultProps = {\r\n    color: '#f8e825',\r\n  }\r\n\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className='my-3 p-3 rounded'style={{ width: '20rem' },{height:'30rem' }}>\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} variant='top' />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as='div'>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as='div'>\r\n          <Rating\r\n            value={product.rating}\r\n            text={`${product.numReviews} reviews`}\r\n          />\r\n        </Card.Text>\r\n\r\n        <Card.Text as='h4'>${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","import {\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\nimport axios from 'axios'\r\n\r\n//Pass keyword props as a defualt to empty string\r\nexport const listProducts = (keyword = '' ,pageNumber ='') => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n        const config = {\r\n            headers: {\r\n                \r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        await axios.delete(`/api/products/${id}`, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n            \r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\n// creating a new Sample product (no sending any data just empty object {} )\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n        const config = {\r\n            headers: {\r\n                               \r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data}=await axios.post(`/api/products`, {} ,config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload:data\r\n            \r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_UPDATE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.put(\r\n        `/api/products/${product._id}`,\r\n        product,\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: PRODUCT_UPDATE_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_UPDATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\nexport const createProductReview = (productId,review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json', \r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        await axios.post(`/api/products/${productId}/reviews`,review,config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            \r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n        const { data } = await axios.get(`/api/products/top`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n\r\n    }\r\n\r\n}","import React from \"react\"\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n\r\n    return (\r\n\r\n        <Alert variant={variant}>\r\n            {children}\r\n\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant:'info'\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport {Spinner} from 'react-bootstrap'\r\n\r\nconst Loader =()=>{\r\n\r\n    return (\r\n        <Spinner animation='border' role='status' style={{width:'100px', height:'100px', margin :'auto', display:'block'}} >\r\n                <span className='sr-only'>Loading ...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate\r\n","import React ,{useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Carousel,Image} from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport {listTopProducts} from '../actions/productActions'\r\n\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const {loading, error,products}=productTopRated\r\n\r\n    useEffect(()=>{\r\n        dispatch(listTopProducts())\r\n\r\n    },[dispatch])\r\n\r\n\r\n    return loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : (\r\n        <Carousel pause='hover' className=\"bg-dark\">\r\n            {products.map(product =>(\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                        <Carousel.Caption className='carousel-caption'>\r\n                            <h2>{product.name} (${product.price})</h2>\r\n                        </Carousel.Caption>\r\n                    </Link> \r\n                    </Carousel.Item>\r\n            )\r\n\r\n            )}\r\n            \r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../Components/Product'\nimport { listProducts } from '../actions/productActions'\nimport Message from '../Components/Message'\nimport Loader from '../Components/Loader'\nimport Paginate from '../Components/Paginate'\nimport ProductCarousel from '../Components/ProductCarousel'\n\n\nconst HomeScreen = ({match}) => {\n\n    const keyword=match.params.keyword\n\n    const pageNumber = match.params.pageNumber || 1\n\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products ,page ,pages } = productList\n\n\n    useEffect(() => {\n        dispatch(listProducts(keyword ,pageNumber))\n\n    }, [dispatch ,keyword ,pageNumber])\n\n\n\n    return (\n        <>\n        {!keyword ? <ProductCarousel/> : <Link to='/' className='btn btn-light'>Back</Link>}\n        \n            <h1>Latest products</h1>\n            {loading ?( <Loader/>) : error ?( <Message variant='danger'>{error}</Message> ):(\n                <>\n                <Row>\n                {products.map(product => (\n                    <Col key={product._id} sm={12} md={6} lg={4} >\n                        <Product product={product} />\n                    </Col>\n                ))}\n            </Row>\n            <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />\n                </>\n              )}\n           \n        </>\n    )\n}\n\nexport default HomeScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\nimport Rating from '../Components/Rating'\nimport Message from '../Components/Message'\nimport Loader from '../Components/Loader'\nimport {\n  listProductDetails,\n  createProductReview,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1)\n  const [rating, setRating] = useState(0)\n  const [comment, setComment] = useState('')\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\n  const {\n    success: successProductReview,\n    error: errorProductReview,\n  } = productReviewCreate\n\n  useEffect(() => {\n    if (successProductReview) {\n      alert('Review Submitted!')\n      setRating(0)\n      setComment('')\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n    }\n    dispatch(listProductDetails(match.params.id))\n  }, [dispatch, match, successProductReview])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment,\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link className='btn btn-light my-3' to='/'>\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n            <Col md={3}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <Form.Control\n                            as='select'\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className='btn-block'\n                      type='button'\n                      disabled={product.countInStock === 0}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\n              <ListGroup variant='flush'>\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {errorProductReview && (\n                    <Message variant='danger'>{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId='rating'>\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as='select'\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=''>Select...</option>\n                          <option value='1'>1 - Poor</option>\n                          <option value='2'>2 - Fair</option>\n                          <option value='3'>3 - Good</option>\n                          <option value='4'>4 - Very Good</option>\n                          <option value='5'>5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId='comment'>\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as='textarea'\n                          row='3'\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button type='submit' variant='primary'>\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to='/login'>sign in</Link> to write a review{' '}\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductScreen\n","import axios from 'axios'\r\nimport { CART_ADD_ITEM ,CART_REMOVE_ITEM,CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\r\n\r\nexport const addToCart =(id,qty)=> async (dispatch,getState)=>{\r\n    const {data}= await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type:CART_ADD_ITEM,\r\n        payload:{\r\n            product:data._id,\r\n            name:data.name,\r\n            image:data.image,\r\n            price:data.price,\r\n            countInStock:data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart =(id)=>(dispatch, getState) =>{\r\n    dispatch({\r\n        type:CART_REMOVE_ITEM,\r\n        payload:id\r\n    })\r\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress =(data)=>(dispatch) =>{\r\n    dispatch({\r\n        type:CART_SAVE_SHIPPING_ADDRESS,\r\n        payload:data\r\n    })\r\n    localStorage.setItem('shippingAddress',JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod =(data)=>(dispatch) =>{\r\n    dispatch({\r\n        type:CART_SAVE_PAYMENT_METHOD,\r\n        payload:data\r\n    })\r\n    localStorage.setItem('paymentMethod',JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card,} from 'react-bootstrap'\r\nimport Message from '../Components/Message'\r\nimport { addToCart ,removeFromCart } from '../actions/cartActions'\r\n\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n\r\n    }\r\n    const checkoutHandler=()=>{\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h2>Shopping Cart</h2>\r\n                {cartItems.length === 0 ? (<Message>Your cart is empty!<Link to='/'> Go Back</Link></Message>) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map((item) => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>${item.price}</Col>\r\n                                    <Col md={2}>\r\n                                        <Form.Control as='select' value={item.qty} onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                            {[...Array(item.countInStock).keys()].map(x => (\r\n                                                <option key={x} value={x + 1}>\r\n                                                    {x + 1}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.product)}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                            \r\n                                        </Button>\r\n                                    </Col>\r\n\r\n\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h3>Subtotal ({cartItems.reduce((acc,item)=> acc + item.qty, 0)}) items</h3>\r\n                            ${cartItems.reduce((acc,item)=> acc + item.qty * item.price , 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkoutHandler}>Proceed To Checkout</Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n           \r\n\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport{Container, Row, Col} from 'react-bootstrap'\r\n\r\n\r\n\r\nconst FormContainer = ({children}) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../Components/Message'\r\nimport Loader from '../Components/Loader'\r\nimport FormContainer from '../Components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../Components/Message'\r\nimport Loader from '../Components/Loader'\r\nimport FormContainer from '../Components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n    \r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n    const dispacth = useDispatch()\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    // Redirect user if they already logIN\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword){\r\n            setMessage('Password do not match!')\r\n        }else{\r\n\r\n            dispacth(register(name,email,password))\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <FormContainer>\r\n\r\n            <h1>Sign Up</h1>\r\n\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter Your Name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='example@email.com' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Confirm Your password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sub,it' variant='primary'>Register</Button>\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Have an Account?{' '}\r\n                    <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Login</Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n\r\n}\r\n\r\nexport default RegisterScreen","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col,Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport Message from '../Components/Message'\r\nimport Loader from '../Components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport {listMyOrders} from \"../actions/orderActions\"\r\n\r\n\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading:loadingOrders, error:errorOrders, orders } = orderListMy\r\n\r\n   \r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user.name) {\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo,user])\r\n\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage('Password do not match!')\r\n        } else {\r\n\r\n            dispatch(updateUserProfile({id:user._id,name,email,password}))\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {success && <Message variant='success'>Profile Updated</Message>}\r\n                {loading && <Loader />}\r\n\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type='text' placeholder='Enter Your Name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control type='email' placeholder='example@email.com' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>password</Form.Label>\r\n                        <Form.Control type='password' placeholder='Enter password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type='password' placeholder='Confirm Your password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='sub,it' variant='primary'>Update</Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\r\n                    <Table striped bordered hover responsive className ='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order =>(\r\n                                <tr key={order._id}>\r\n                                    <td>{order.createdAt.substring(0,10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0,10) :(\r\n                                        <i className='fas fa-times' style ={{color:'red'}}></i>\r\n                                    )}</td>\r\n                                    <td>{order.isDelivered ? order.deliveredAt.substring(0,10) :(\r\n                                        <i className='fas fa-times' style ={{color:'red'}}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to ={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm' variant='light'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n\r\n\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n\r\n                    </Table>\r\n                )}\r\n\r\n            </Col>\r\n\r\n        </Row>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileScreen","import { ORDER_CREATE_FAIL,\r\n     ORDER_CREATE_SUCCESS,\r\n      ORDER_CREATE_REQUEST, \r\n      ORDER_DETAILS_REQUEST,\r\n      ORDER_DETAILS_SUCCESS,\r\n      ORDER_DETAILS_FAIL,\r\n      ORDER_PAY_REQUEST,\r\n      ORDER_PAY_SUCCESS,\r\n      ORDER_PAY_FAIL,\r\n      ORDER_LIST_MY_REQUEST,\r\n      ORDER_LIST_MY_SUCCESS,\r\n      ORDER_LIST_MY_FAIL,\r\n      ORDER_LIST_REQUEST,\r\n      ORDER_LIST_SUCCESS,\r\n      ORDER_LIST_FAIL,\r\n      ORDER_DELIVER_REQUEST,\r\n      ORDER_DELIVER_SUCCESS,\r\n      ORDER_DELIVER_FAIL} from '../constants/orderConstants'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`,paymentResult, config)\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n        const config = {\r\n            headers: {\r\n                \r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n        const config = {\r\n            headers: {\r\n                \r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/orders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n        const config = {\r\n            headers: {\r\n               \r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/orders/${order._id}/deliver`,{}, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n\r\n    }\r\n}","import React from 'react'\r\nimport {Nav} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\n\r\nconst CheckoutSteps = ({step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                <LinkContainer to='/login'>\r\n                    <Nav.Link>Sign In</Nav.Link>\r\n                </LinkContainer>\r\n                ):( <Nav.Link disabled >Sign In</Nav.Link> ) }\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                <LinkContainer to='/shipping'>\r\n                    <Nav.Link>Shipping</Nav.Link>\r\n                </LinkContainer>\r\n                ):( <Nav.Link disabled >Shipping</Nav.Link> ) }\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                <LinkContainer to='/payment'>\r\n                    <Nav.Link>Payment</Nav.Link>\r\n                </LinkContainer>\r\n                ):( <Nav.Link disabled >Payment</Nav.Link> ) }\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                <LinkContainer to='/placeorder'>\r\n                    <Nav.Link>Place Order</Nav.Link>\r\n                </LinkContainer>\r\n                ):( <Nav.Link disabled >Place Order</Nav.Link> ) }\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Form, Button} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\nimport FormContainer from '../Components/FormContainer'\r\nimport CheckoutSteps from '../Components/CheckoutSteps'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2/>\r\n            <h2>Shipping</h2>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control type='text' required placeholder='Enter Your address' value={address} onChange={(e) => setAddress(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control type='text' required placeholder='Enter Your city' value={city} onChange={(e) => setCity(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control type='text' required placeholder='Enter Your postal code' value={postalCode} onChange={(e) => setPostalCode(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control type='text' required placeholder='Enter Your country' value={country} onChange={(e) => setCountry(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n\r\n            </Form>\r\n\r\n        </FormContainer>\r\n\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\nimport FormContainer from '../Components/FormContainer'\r\nimport CheckoutSteps from '../Components/CheckoutSteps'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h2>Payment Method</h2>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n\r\n                    <Col>\r\n                        <Form.Check type='radio'\r\n                            label='PayPal or Creadit Card'\r\n                            id=\"PayPal\"\r\n                            name='paymentMethod'\r\n                            value='PayPal'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}>\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n\r\n        </FormContainer>\r\n\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n\r\n","import React,{useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Col, ListGroup, Image, Card, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../Components/Message'\r\nimport CheckoutSteps from '../Components/CheckoutSteps'\r\nimport{createOrder} from '../actions/orderActions'\r\n\r\n\r\n\r\nconst PlaceOrderScreen = ({history}) => {\r\n    const dispatch=useDispatch()\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n\r\n\r\n    // Calculate Prices\r\n\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    const orderCreate=useSelector((state)=>state.orderCreate)\r\n    const{order,success,error}=orderCreate\r\n\r\n    useEffect(()=>{\r\n        if(success){\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n        // eslint-disable-next-line\r\n    },[history, success])\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(\r\n          createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n          })\r\n        )\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city} {' '}\r\n                                {cart.shippingAddress.postaalCode},{' '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Item</h2>\r\n                            {cart.cartItems.length === 0 ? <Message>Your cart is empty</Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            \r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                type='button'\r\n                                className='btn-block'\r\n                                disabled={cart.cartItems === 0}\r\n                                onClick={placeOrderHandler}\r\n                                >\r\n                                Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Col, ListGroup, Image, Card, Row,Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../Components/Message'\r\nimport Loader from '../Components/Loader'\r\nimport { getOrderDetails, payOrder,deliverOrder } from '../actions/orderActions'\r\nimport {ORDER_PAY_RESET,ORDER_DELIVER_RESET} from '../constants/orderConstants'\r\n\r\n\r\n\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n\r\n    const orderId = match.params.id\r\n    const [sdkready, setSdkReady] = useState(false)\r\n\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector((state) => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const orderPay = useSelector((state) => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector((state) => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    if (!loading) {\r\n\r\n        // Calculate Prices\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n        order.itemsPrice = addDecimals(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n          history.push('/login')\r\n        }\r\n    \r\n        const addPayPalScript = async () => {\r\n          const { data: clientId } = await axios.get('/api/config/paypal')\r\n          const script = document.createElement('script')\r\n          script.type = 'text/javascript'\r\n          script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n          script.async = true\r\n          script.onload = () => {\r\n            setSdkReady(true)\r\n          }\r\n          document.body.appendChild(script)\r\n        }\r\n    \r\n        if (!order || successPay || successDeliver) {\r\n          dispatch({ type: ORDER_PAY_RESET })\r\n          dispatch({ type: ORDER_DELIVER_RESET })\r\n          dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n          if (!window.paypal) {\r\n            addPayPalScript()\r\n          } else {\r\n            setSdkReady(true)\r\n          }\r\n        }\r\n      }, [dispatch, orderId, successPay, successDeliver, order])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n\r\n        console.log(\"paymentResult :\", paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler=()=>{\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n        <>\r\n            <h3>Order: {order._id}</h3>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name: </strong> {order.user.name}</p>\r\n                            <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city} {' '}\r\n                                {order.shippingAddress.postaalCode},{' '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? <Message variant='success'>Deliverd On {order.deliveredAt}</Message> :\r\n                                <Message variant='danger'>Not Deliverd</Message>}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p><strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? <Message variant='success'>Paid On {order.paidAt}</Message> :\r\n                                <Message variant='danger'>Not Paid</Message>}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Item</h2>\r\n                            {order.orderItems.length === 0 ? <Message>Ordert is empty</Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkready ? <Loader /> : (\r\n                                        <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            {loadingDeliver && <Loader/>}\r\n                            {userInfo && userInfo.isAdmin && order.isPaid && !order.isDeliverd && (\r\n                                <ListGroup.Item>\r\n                                    <Button type='button' className='btn btn-block' onClick={deliverHandler}>Mark As Delivered</Button>\r\n                                </ListGroup.Item>\r\n                            )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../Components/Message'\r\nimport Loader from '../Components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userList = useSelector((state) => state.userList)\r\n  const { loading, error, users } = userList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userDelete = useSelector((state) => state.userDelete)\r\n  const { success: successDelete } = userDelete\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteUser(id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../Components/Message'\r\nimport Loader from '../Components/Loader'\r\nimport FormContainer from '../Components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport {USER_UPDATE_RESET} from '../constants/userConstant'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id\r\n  \r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n  \r\n    const dispatch = useDispatch()\r\n  \r\n    const userDetails = useSelector((state) => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n  \r\n    const userUpdate = useSelector((state) => state.userUpdate)\r\n    const {\r\n      loading: loadingUpdate,\r\n      error: errorUpdate,\r\n      success: successUpdate,\r\n    } = userUpdate\r\n  \r\n    useEffect(() => {\r\n      if (successUpdate) {\r\n        dispatch({ type: USER_UPDATE_RESET })\r\n        history.push('/admin/userlist')\r\n      } else {\r\n        if (!user.name || user._id !== userId) {\r\n          dispatch(getUserDetails(userId))\r\n        } else {\r\n          setName(user.name)\r\n          setEmail(user.email)\r\n          setIsAdmin(user.isAdmin)\r\n        }\r\n      }\r\n    }, [dispatch, history, userId, user, successUpdate])\r\n  \r\n    const submitHandler = (e) => {\r\n      e.preventDefault()\r\n      dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n    }\r\n  \r\n    return (\r\n      <>\r\n        <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n          Go Back\r\n        </Link>\r\n        <FormContainer>\r\n          <h1>Edit User</h1>\r\n          {loadingUpdate && <Loader />}\r\n          {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n          {loading ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <Message variant='danger'>{error}</Message>\r\n          ) : (\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId='name'>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type='name'\r\n                  placeholder='Enter name'\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n  \r\n              <Form.Group controlId='email'>\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                  type='email'\r\n                  placeholder='Enter email'\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n  \r\n              <Form.Group controlId='isadmin'>\r\n                <Form.Check\r\n                  type='checkbox'\r\n                  label='Is Admin'\r\n                  checked={isAdmin}\r\n                  onChange={(e) => setIsAdmin(e.target.checked)}\r\n                ></Form.Check>\r\n              </Form.Group>\r\n  \r\n              <Button type='submit' variant='primary'>\r\n                Update\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </FormContainer>\r\n      </>\r\n    )\r\n  }\r\n  \r\n  export default UserEditScreen\r\n  ","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../Components/Message'\r\nimport Loader from '../Components/Loader'\r\nimport Paginate from '../Components/Paginate'\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete\r\n\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push('/login')\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`)\r\n    } else {\r\n      dispatch(listProducts('', pageNumber))\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber,\r\n  ])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../Components/Message'\r\nimport Loader from '../Components/Loader'\r\nimport FormContainer from '../Components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET })\r\n      history.push('/admin/productlist')\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId))\r\n      } else {\r\n        setName(product.name)\r\n        setPrice(product.price)\r\n        setImage(product.image)\r\n        setBrand(product.brand)\r\n        setCategory(product.category)\r\n        setCountInStock(product.countInStock)\r\n        setDescription(product.description)\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, successUpdate])\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter brand'\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter countInStock'\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter category'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../Components/Message'\r\nimport Loader from '../Components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n \r\n    const orderList = useSelector((state) => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n    console.log(\"orderList-->> \",orderList)\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const {userInfo } = userLogin\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history , userInfo])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n           <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0,10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0,10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0,10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                \r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )\r\n      }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './Components/Header'\nimport Footer from './Components/Footer'\nimport HomeScreen from './Screens/HomeScreen'\nimport ProductScreen from './Screens/ProductScreen'\nimport CartScreen from './Screens/CartScreen'\nimport LoginScreen from './Screens/LoginScreen'\nimport RegisterScreen from './Screens/RegisterScreen'\nimport ProfileScreen from './Screens/ProfileScreen'\nimport ShippingScreen from './Screens/ShippingScreen'\nimport PaymentScreen from './Screens/PaymentScreen'\nimport PlaceOrderScreen from './Screens/PlaceOrderScreen'\nimport OrderScreen from './Screens/OrderScreen'\nimport UserListScreen from './Screens/UserListScreen'\nimport UserEditScreen from './Screens/UserEditScreen'\nimport ProductListScreen from './Screens/ProductListScreen'\nimport ProductEditScreen from './Screens/ProductEditScreen'\nimport OrderListScreen from './Screens/OrderListScreen'\n\n\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route path='/admin/productlist' component={ProductListScreen} exact/>\n          <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact/>\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact />\n\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store ={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}